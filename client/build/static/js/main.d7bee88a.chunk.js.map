{"version":3,"sources":["Components/Start.js","Components/Mid.js","App.js","reportWebVitals.js","index.js"],"names":["useState","img","setImg","class","type","name","onChange","event","img_file","target","files","console","log","file","reader","FileReader","readAsDataURL","onload","result","convertImg","required","to","pathname","state","useLocation","done","setDone","username","book_name","price","disc","data","setData","txtChanged","value","prevState","placeholder","onClick","Axios","post","then","res","App","exact","path","Start","Mid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAIe,aACX,MAAsBA,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAqBA,OACI,gCACI,sBAAKC,MAAM,MAAX,UACI,8DACA,uBACAC,KAAK,OACLC,KAAK,aACLC,SA1BK,SAACC,GACd,IAAIC,EAAWD,EAAME,OAAOC,MAAM,GAClCC,QAAQC,IAAIJ,IAGK,SAACK,GACd,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,cAAcH,GAErBC,EAAOG,OAAS,WACZf,EAAOY,EAAOI,SAItBC,CAAWX,IAYHY,UAAQ,OAOZ,cAAC,IAAD,CAAMC,GACF,CACIC,SAAU,OACVC,MAAOtB,GAHf,SAMI,wBAAQG,KAAK,SAAb,wB,iCCvCD,aACX,IAAIH,EAAMuB,cAIV,EAAwBxB,oBAAS,GAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KACA,EAAwB1B,mBAAS,CAC7B2B,SAAU,GACVC,UAAW,GACXC,MAAO,GACPC,KAAM,GACN7B,IAAKA,EAAIsB,QALb,mBAAOQ,EAAP,KAAaC,EAAb,KAQIC,EAAa,SAAC1B,GACd,IAAIF,EAAOE,EAAME,OAAOJ,KACpB6B,EAAQ3B,EAAME,OAAOyB,MAEzBF,GAAQ,SAAAG,GAAS,kCACVA,GADU,kBAEZ9B,EAAO6B,QAIhBvB,QAAQC,IAAImB,GAqBZ,OAAIN,EAEI,gCAEA,0EAIA,cAAC,IAAD,CAAMJ,GAAG,IAAT,wBAOJ,gCAEQ,sBAAKlB,MAAM,aAAX,UACI,yCACA,uBAAOC,KAAK,OAAOC,KAAK,WACxBC,SAAU2B,EAAYG,YAAY,OAAOhB,UAAQ,OAErD,sBAAKjB,MAAM,aAAX,UACI,8CACA,uBAAOC,KAAK,OAAOC,KAAK,YACxBC,SAAU2B,EAAaG,YAAY,OAAOhB,UAAQ,OAEtD,sBAAKjB,MAAM,aAAX,UACI,0CACA,uBAAOC,KAAK,OAAOC,KAAK,QACxBC,SAAU2B,EAAYG,YAAY,OAAOhB,UAAQ,OAErD,sBAAKjB,MAAM,aAAX,UACI,gDACA,uBAAOC,KAAK,OAAOC,KAAK,OACxBC,SAAU2B,EAAYG,YAAY,YAGtC,wBAAQhC,KAAK,SAASiC,QAAS,YAxDhC,SAACN,GAERpB,QAAQC,IAAI,QACZ0B,IAAMC,KAAK,YAAa,CACpBZ,SAAUI,EAAKJ,SACfC,UAAWG,EAAKH,UAChBC,MAAOE,EAAKF,MACZC,KAAMC,EAAKD,KACX7B,IAAK8B,EAAK9B,MAEbuC,MAAK,SAACC,GAEY,SADFA,EAAIV,MAEbL,GAAQ,MA4CJa,CAAKR,IADT,wBC7DDW,EAnBL,WACR,OACE,mCACA,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,OAAlB,SACE,cAACE,EAAD,cCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7bee88a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default () => {\r\n    const [img, setImg] = useState(\"\")\r\n\r\n    let imgChanged = (event) => {\r\n        let img_file = event.target.files[0] // array of files uploaded...\r\n        console.log(img_file);\r\n\r\n\r\n        let convertImg = (file) => {\r\n            let reader = new FileReader()\r\n\r\n            reader.readAsDataURL(file)\r\n            \r\n            reader.onload = () => {\r\n                setImg(reader.result)\r\n            }\r\n        }\r\n\r\n        convertImg(img_file)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"img\">\r\n                <label>Book Image (Under 10mb): </label>\r\n                <input\r\n                type=\"file\"\r\n                name=\"book_image\"\r\n                onChange={imgChanged}\r\n                required/>\r\n\r\n                {/* <button onClick={() => {\r\n                    UpImg('book_image')\r\n                }}>Upload Img</button> */}\r\n            </div>\r\n            \r\n            <Link to={\r\n                {\r\n                    pathname: '/mid',\r\n                    state: img\r\n                }\r\n            }>\r\n                <button type=\"submit\">Next</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {\r\n    useLocation,\r\n    Link\r\n} from 'react-router-dom'\r\n\r\nimport Axios from 'axios'\r\n\r\nexport default () => {\r\n    let img = useLocation()\r\n    // console.log(img.state);\r\n\r\n\r\n    const [done, setDone] = useState(false)\r\n    const [data, setData] = useState({\r\n        username: '',\r\n        book_name: '',\r\n        price: '',\r\n        disc: '',\r\n        img: img.state,\r\n    })\r\n\r\n    let txtChanged = (event) => {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n\r\n        setData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    console.log(data);\r\n\r\n\r\n    let post = (data) => {\r\n        // Axios.post('http://localhost:5000/finalise', {\r\n        console.log('post');\r\n        Axios.post('/finalise', {\r\n            username: data.username,\r\n            book_name: data.book_name,\r\n            price: data.price,\r\n            disc: data.disc,\r\n            img: data.img,\r\n        })\r\n        .then((res) => {\r\n            let result = res.data\r\n            if (result === 'DONE') {\r\n                setDone(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    if (done) {\r\n        return (\r\n            <div>\r\n\r\n            <div>\r\n                Your Presious Request Has Been Submited\r\n            </div>\r\n\r\n            <Link to=\"/\">Go Back</Link>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <form method=\"POST\" action=\"/finalise\"> */}\r\n                <div class=\"form-items\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" name=\"username\" \r\n                    onChange={txtChanged} placeholder=\"none\" required />\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Book Name</label>\r\n                    <input type=\"text\" name=\"book_name\"\r\n                    onChange={txtChanged}  placeholder=\"none\" required />\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Price</label>\r\n                    <input type=\"text\" name=\"price\" \r\n                    onChange={txtChanged} placeholder=\"none\" required/>\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Discription</label>\r\n                    <input type=\"text\" name=\"disc\" \r\n                    onChange={txtChanged} placeholder=\"none\"/>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={() => {\r\n                    post(data)\r\n                }}>Submit</button>\r\n            {/* </form> */}\r\n        </div>\r\n    )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport Start from './Components/Start.js'\nimport Mid from './Components/Mid.js'\n\n\nlet App = () => {\n  return (\n    <>\n    <Router>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Start/>\n        </Route>\n        <Route exact path=\"/mid\">\n          <Mid/>\n        </Route>\n      </Switch>\n\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}