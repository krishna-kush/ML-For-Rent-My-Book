{"version":3,"sources":["Components/Start.js","Components/Mid.js","App.js","reportWebVitals.js","index.js"],"names":["useState","img_path","setImgPath","img_file","class","type","name","onChange","event","target","files","console","log","required","onClick","img_imput_name","form_data","FormData","append","get","axios","post","headers","then","res","data","dest","UpImg","to","pathname","state","useLocation","method","action","value","placeholder","App","exact","path","Start","Mid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAQe,aACX,MAA+BA,mBAAS,IAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGIC,EAAW,GAqEf,OACI,gCAEI,sBAAKC,MAAM,MAAX,UACI,8DACA,uBACAC,KAAK,OACLC,KAAK,aACLC,SApEK,SAACC,GACdL,EAAWK,EAAMC,OAAOC,MAAM,GAC9BC,QAAQC,IAAIT,IAmEJU,UAAQ,IAER,wBAAQC,QAAS,YAhEb,SAACC,GACT,IAAIC,EAAY,IAAIC,IACpBD,EAAUE,OACNH,EACAZ,EACAA,EAASG,MAEbK,QAAQC,IAAII,EAAUG,IAAI,eAG1BC,IAAMC,KAAK,+BAAgCL,EAAW,CAClDM,QAAS,CACL,eAAgB,yBAGvBC,MAAK,SAACC,GACHb,QAAQC,IAAIY,EAAIC,KAAKC,MACrBxB,EAAWsB,EAAIC,KAAKC,SAgDhBC,CAAM,eADV,2BAcJ,cAAC,IAAD,CAAMC,GACF,CACIC,SAAU,OACVC,MAAO7B,GAHf,SAMI,wBAAQI,KAAK,SAAb,wBC7GD,aAEX,IAAIqB,EAAOK,cAGX,OAFApB,QAAQC,IAAIc,EAAKI,OAGb,8BACI,uBAAME,OAAO,OAAOC,OAAO,YAA3B,UACA,uBAAO5B,KAAK,SAASC,KAAM,OAAO4B,MAAOR,EAAKI,QAG9C,sBAAK1B,MAAM,aAAX,UACI,yCACA,uBAAOC,KAAK,OAAOC,KAAK,WAAW6B,YAAY,OAAOtB,UAAQ,OAElE,sBAAKT,MAAM,aAAX,UACI,8CACA,uBAAOC,KAAK,OAAOC,KAAK,YAAY6B,YAAY,OAAOtB,UAAQ,OAEnE,sBAAKT,MAAM,aAAX,UACI,0CACA,uBAAOC,KAAK,OAAOC,KAAK,QAAQ6B,YAAY,OAAOtB,UAAQ,OAE/D,sBAAKT,MAAM,aAAX,UACI,gDACA,uBAAOC,KAAK,OAAOC,KAAK,OAAO6B,YAAY,YAG/C,wBAAQ9B,KAAK,SAAb,0BCDG+B,EAnBL,WACR,OACE,mCACA,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,OAAlB,SACE,cAACE,EAAD,cCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08748ea6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Axios from 'axios'\r\nimport FormData from 'form-data'\r\nimport axios from 'axios';\r\n\r\n\r\nexport default () => {\r\n    const [img_path, setImgPath] = useState(\"\")\r\n\r\n\r\n    let img_file = \"\"\r\n    // let text_data = {\r\n    //     img_path: img_path,\r\n    //     username: \"\",\r\n    //     book_name: \"\",\r\n    //     price: \"\",\r\n    //     disc: \"\",\r\n    // }\r\n\r\n    let ImgChanged = (event) => {\r\n        img_file = event.target.files[0] // array of files uploaded...\r\n        console.log(img_file);\r\n    }\r\n\r\n    // let Upload = () => {\r\n\r\n        let UpImg = (img_imput_name) => {\r\n            let form_data = new FormData()\r\n            form_data.append(\r\n                img_imput_name,\r\n                img_file,\r\n                img_file.name\r\n                )\r\n            console.log(form_data.get(\"book_image\"))\r\n\r\n    \r\n            axios.post(\"http://localhost:5000/upload\", form_data, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                  }\r\n            })\r\n            .then((res) => {\r\n                console.log(res.data.dest);\r\n                setImgPath(res.data.dest)\r\n                // img_path = res.data\r\n            })\r\n        }\r\n\r\n    //    // UpImg('book_image')\r\n\r\n    //     let UpText = (name_ls) => {\r\n    //         console.log(text_data);\r\n    //         let form_data = new FormData()\r\n\r\n    //         let val_temp_ls = Object.values(text_data)\r\n\r\n    //         for (let [index, i] of name_ls.entries()) {\r\n    //             form_data.append(\r\n    //                 i, // field\r\n    //                 val_temp_ls[index] // value\r\n    //             )\r\n    //         }\r\n\r\n    //         console.log(form_data.get(\"username\"))\r\n\r\n    //         axios.post(\"http://localhost:5000/finalise\", form_data, {\r\n    //             headers: {\r\n    //             'Content-Type': 'text/html; charset=UTF-8'\r\n    //             }\r\n    //         })\r\n    //             // headers: form_data.getHeaders()\r\n    //         // })\r\n    //     }\r\n\r\n    //     // UpText(['img_path', 'username', 'book_name', 'price', 'disc'])\r\n\r\n    // // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <form method=\"POST\" action=\"http://localhost:5000/upload\" enctype=\"multipart/form-data\">  */}\r\n            <div class=\"img\">\r\n                <label>Book Image (Under 10mb): </label>\r\n                <input\r\n                type=\"file\"\r\n                name=\"book_image\"\r\n                onChange={ImgChanged}\r\n                required/>\r\n\r\n                <button onClick={() => {\r\n                    UpImg('book_image')\r\n                }}>Upload Img</button>\r\n            </div>\r\n\r\n            \r\n\r\n            {/* <div className=\"up-button\">\r\n                <button onClick={Upload}>\r\n                    Upload\r\n                </button>\r\n            </div> */}\r\n\r\n            \r\n            <Link to={\r\n                {\r\n                    pathname: '/mid',\r\n                    state: img_path\r\n                }\r\n            }>\r\n                <button type=\"submit\">Next</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default () => {\r\n\r\n    let dest = useLocation()\r\n    console.log(dest.state);\r\n\r\n    return (\r\n        <div>\r\n            <form method=\"POST\" action=\"/finalise\">\r\n            <input type=\"hidden\" name =\"dest\" value={dest.state}/>\r\n\r\n\r\n            <div class=\"form-items\">\r\n                <label>Name</label>\r\n                <input type=\"text\" name=\"username\" placeholder=\"none\" required />\r\n            </div>\r\n            <div class=\"form-items\">\r\n                <label>Book Name</label>\r\n                <input type=\"text\" name=\"book_name\" placeholder=\"none\" required />\r\n            </div>\r\n            <div class=\"form-items\">\r\n                <label>Price</label>\r\n                <input type=\"text\" name=\"price\" placeholder=\"none\" required/>\r\n            </div>\r\n            <div class=\"form-items\">\r\n                <label>Discription</label>\r\n                <input type=\"text\" name=\"disc\" placeholder=\"none\"/>\r\n            </div>\r\n\r\n            <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport Start from './Components/Start.js'\nimport Mid from './Components/Mid.js'\n\n\nlet App = () => {\n  return (\n    <>\n    <Router>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Start/>\n        </Route>\n        <Route exact path=\"/mid\">\n          <Mid/>\n        </Route>\n      </Switch>\n\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}