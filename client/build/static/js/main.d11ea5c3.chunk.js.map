{"version":3,"sources":["Components/Start.js","Components/Mid.js","App.js","reportWebVitals.js","index.js"],"names":["useState","img","setImg","class","type","name","onChange","event","img_file","target","files","console","log","file","reader","FileReader","readAsDataURL","onload","result","ConvertImg","required","to","pathname","state","useLocation","method","action","value","placeholder","App","exact","path","Start","Mid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAIe,aACX,MAAsBA,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAqBA,OACI,gCACI,sBAAKC,MAAM,MAAX,UACI,8DACA,uBACAC,KAAK,OACLC,KAAK,aACLC,SA1BK,SAACC,GACd,IAAIC,EAAWD,EAAME,OAAOC,MAAM,GAClCC,QAAQC,IAAIJ,IAGK,SAACK,GACd,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,cAAcH,GAErBC,EAAOG,OAAS,WACZf,EAAOY,EAAOI,SAItBC,CAAWX,IAYHY,UAAQ,OAOZ,cAAC,IAAD,CAAMC,GACF,CACIC,SAAU,OACVC,MAAOtB,GAHf,SAMI,wBAAQG,KAAK,SAAb,wBC5CD,aAEX,IAAIH,EAAMuB,cAGV,OAFAb,QAAQC,IAAIX,EAAIsB,OAGZ,8BACI,uBAAME,OAAO,OAAOC,OAAO,YAA3B,UACI,uBAAOtB,KAAK,SAASC,KAAM,MAAMsB,MAAO1B,EAAIsB,QAE5C,sBAAKpB,MAAM,aAAX,UACI,yCACA,uBAAOC,KAAK,OAAOC,KAAK,WAAWuB,YAAY,OAAOR,UAAQ,OAElE,sBAAKjB,MAAM,aAAX,UACI,8CACA,uBAAOC,KAAK,OAAOC,KAAK,YAAYuB,YAAY,OAAOR,UAAQ,OAEnE,sBAAKjB,MAAM,aAAX,UACI,0CACA,uBAAOC,KAAK,OAAOC,KAAK,QAAQuB,YAAY,OAAOR,UAAQ,OAE/D,sBAAKjB,MAAM,aAAX,UACI,gDACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOuB,YAAY,YAG/C,wBAAQxB,KAAK,SAAb,0BCADyB,EAnBL,WACR,OACE,mCACA,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,OAAlB,SACE,cAACE,EAAD,cCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d11ea5c3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default () => {\r\n    const [img, setImg] = useState(\"\")\r\n\r\n    let ImgChanged = (event) => {\r\n        let img_file = event.target.files[0] // array of files uploaded...\r\n        console.log(img_file);\r\n\r\n\r\n        let ConvertImg = (file) => {\r\n            let reader = new FileReader()\r\n\r\n            reader.readAsDataURL(file)\r\n            \r\n            reader.onload = () => {\r\n                setImg(reader.result)\r\n            }\r\n        }\r\n\r\n        ConvertImg(img_file)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"img\">\r\n                <label>Book Image (Under 10mb): </label>\r\n                <input\r\n                type=\"file\"\r\n                name=\"book_image\"\r\n                onChange={ImgChanged}\r\n                required/>\r\n\r\n                {/* <button onClick={() => {\r\n                    UpImg('book_image')\r\n                }}>Upload Img</button> */}\r\n            </div>\r\n            \r\n            <Link to={\r\n                {\r\n                    pathname: '/mid',\r\n                    state: img\r\n                }\r\n            }>\r\n                <button type=\"submit\">Next</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default () => {\r\n\r\n    let img = useLocation()\r\n    console.log(img.state);\r\n\r\n    return (\r\n        <div>\r\n            <form method=\"POST\" action=\"/finalise\">\r\n                <input type=\"hidden\" name =\"img\" value={img.state}/>\r\n\r\n                <div class=\"form-items\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" name=\"username\" placeholder=\"none\" required />\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Book Name</label>\r\n                    <input type=\"text\" name=\"book_name\" placeholder=\"none\" required />\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Price</label>\r\n                    <input type=\"text\" name=\"price\" placeholder=\"none\" required/>\r\n                </div>\r\n                <div class=\"form-items\">\r\n                    <label>Discription</label>\r\n                    <input type=\"text\" name=\"disc\" placeholder=\"none\"/>\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport Start from './Components/Start.js'\nimport Mid from './Components/Mid.js'\n\n\nlet App = () => {\n  return (\n    <>\n    <Router>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Start/>\n        </Route>\n        <Route exact path=\"/mid\">\n          <Mid/>\n        </Route>\n      </Switch>\n\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}